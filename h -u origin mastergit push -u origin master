[33mcommit 1669c11d24d12c6ab013bf403310ceda34b81980[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m
Author: SuperDoctorCat <15711120980@163.com>
Date:   Fri Apr 11 15:13:20 2025 +0800

    Initial commit

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..97e9679[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m# Ignore Python cache files[m
[32m+[m[32m__pycache__/[m
[32m+[m
[32m+[m[32m# Ignore data checkpoints[m
[32m+[m[32mdata/checkpoint/[m
[32m+[m
[32m+[m[32m# Ignore generated files[m
[32m+[m[32m*.pkl[m
[32m+[m[32m*.pt[m
[32m+[m[32m*.pkl[m
[32m+[m
[32m+[m[32m# Ignore specific directories[m
[32m+[m[32mdata/[m
\ No newline at end of file[m
[1mdiff --git a/.idea/deployment.xml b/.idea/deployment.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..d85413b[m
[1m--- /dev/null[m
[1m+++ b/.idea/deployment.xml[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="PublishConfigData" remoteFilesAllowedToDisappearOnAutoupload="false">[m
[32m+[m[32m    <serverData>[m
[32m+[m[32m      <paths name="root@183.242.51.221:7842 agent">[m
[32m+[m[32m        <serverdata>[m
[32m+[m[32m          <mappings>[m
[32m+[m[32m            <mapping deploy="/root/PycharmProjects/Controlled-Urban-Rail-OD-Prediction" local="$PROJECT_DIR$" web="/" />[m
[32m+[m[32m          </mappings>[m
[32m+[m[32m        </serverdata>[m
[32m+[m[32m      </paths>[m
[32m+[m[32m      <paths name="root@183.242.51.221:7842 password">[m
[32m+[m[32m        <serverdata>[m
[32m+[m[32m          <mappings>[m
[32m+[m[32m            <mapping local="$PROJECT_DIR$" web="/" />[m
[32m+[m[32m          </mappings>[m
[32m+[m[32m        </serverdata>[m
[32m+[m[32m      </paths>[m
[32m+[m[32m    </serverData>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..105ce2d[m
[1m--- /dev/null[m
[1m+++ b/.idea/inspectionProfiles/profiles_settings.xml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<component name="InspectionProjectProfileManager">[m
[32m+[m[32m  <settings>[m
[32m+[m[32m    <option name="USE_PROJECT_PROFILE" value="false" />[m
[32m+[m[32m    <version value="1.0" />[m
[32m+[m[32m  </settings>[m
[32m+[m[32m</component>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..fdd6f7b[m
[1m--- /dev/null[m
[1m+++ b/.idea/misc.xml[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ProjectRootManager" version="2" project-jdk-name="tensorflow_cpu_original" project-jdk-type="Python SDK" />[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/workspace.xml b/.idea/workspace.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..c564f74[m
[1m--- /dev/null[m
[1m+++ b/.idea/workspace.xml[m
[36m@@ -0,0 +1,150 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="AutoImportSettings">[m
[32m+[m[32m    <option name="autoReloadType" value="SELECTIVE" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="ChangeListManager">[m
[32m+[m[32m    <list default="true" id="79cb4298-14cd-41a5-811b-ec6f0e223285" name="Changes" comment="" />[m
[32m+[m[32m    <option name="SHOW_DIALOG" value="false" />[m
[32m+[m[32m    <option name="HIGHLIGHT_CONFLICTS" value="true" />[m
[32m+[m[32m    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />[m
[32m+[m[32m    <option name="LAST_RESOLUTION" value="IGNORE" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="ProjectColorInfo">{[m
[32m+[m[32m  &quot;associatedIndex&quot;: 1[m
[32m+[m[32m}</component>[m
[32m+[m[32m  <component name="ProjectId" id="2phJo6xVDrBkcggB4OOCktV9dVt" />[m
[32m+[m[32m  <component name="ProjectViewState">[m
[32m+[m[32m    <option name="hideEmptyMiddlePackages" value="true" />[m
[32m+[m[32m    <option name="showLibraryContents" value="true" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="PropertiesComponent"><![CDATA[{[m
[32m+[m[32m  "keyToString": {[m
[32m+[m[32m    "Python.py_g_t.executor": "Run",[m
[32m+[m[32m    "Python.test.executor": "Debug",[m
[32m+[m[32m    "RunOnceActivity.ShowReadmeOnStart": "true",[m
[32m+[m[32m    "WebServerToolWindowPanel.toolwindow.highlight.mappings": "true",[m
[32m+[m[32m    "WebServerToolWindowPanel.toolwindow.highlight.symlinks": "true",[m
[32m+[m[32m    "WebServerToolWindowPanel.toolwindow.show.date": "false",[m
[32m+[m[32m    "WebServerToolWindowPanel.toolwindow.show.permissions": "false",[m
[32m+[m[32m    "WebServerToolWindowPanel.toolwindow.show.size": "false",[m
[32m+[m[32m    "last_opened_file_path": "C:/Users/SuperDoctorCat/PycharmProjects/Controlled-Urban-Rail-OD-Prediction",[m
[32m+[m[32m    "node.js.detected.package.eslint": "true",[m
[32m+[m[32m    "node.js.detected.package.tslint": "true",[m
[32m+[m[32m    "node.js.selected.package.eslint": "(autodetect)",[m
[32m+[m[32m    "node.js.selected.package.tslint": "(autodetect)",[m
[32m+[m[32m    "nodejs_package_manager_path": "npm",[m
[32m+[m[32m    "settings.editor.selected.configurable": "project.propVCSSupport.Mappings",[m
[32m+[m[32m    "vue.rearranger.settings.migration": "true"[m
[32m+[m[32m  }[m
[32m+[m[32m}]]></component>[m
[32m+[m[32m  <component name="RecentsManager">[m
[32m+[m[32m    <key name="MoveFile.RECENT_KEYS">[m
[32m+[m[32m      <recent name="C:\Users\SuperDoctorCat\PycharmProjects\Controlled-Urban-Rail-OD-Prediction\test_tools" />[m
[32m+[m[32m      <recent name="C:\Users\SuperDoctorCat\PycharmProjects\Controlled-Urban-Rail-OD-Prediction\dmn_knw_gnrtr" />[m
[32m+[m[32m    </key>[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="RunManager" selected="Python.py_g_t">[m
[32m+[m[32m    <configuration name="py_g_t" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">[m
[32m+[m[32m      <module name="Controlled-Urban-Rail-OD-Prediction" />[m
[32m+[m[32m      <option name="ENV_FILES" value="" />[m
[32m+[m[32m      <option name="INTERPRETER_OPTIONS" value="" />[m
[32m+[m[32m      <option name="PARENT_ENVS" value="true" />[m
[32m+[m[32m      <envs>[m
[32m+[m[32m        <env name="PYTHONUNBUFFERED" value="1" />[m
[32m+[m[32m      </envs>[m
[32m+[m[32m      <option name="SDK_HOME" value="" />[m
[32m+[m[32m      <option name="SDK_NAME" value="pytorch" />[m
[32m+[m[32m      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />[m
[32m+[m[32m      <option name="IS_MODULE_SDK" value="false" />[m
[32m+[m[32m      <option name="ADD_CONTENT_ROOTS" value="true" />[m
[32m+[m[32m      <option name="ADD_SOURCE_ROOTS" value="true" />[m
[32m+[m[32m      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
[32m+[m[32m      <option name="SCRIPT_NAME" value="C:\Users\SuperDoctorCat\PycharmProjects\Controlled-Urban-Rail-OD-Prediction\dmn_knw_gnrtr\py_g_t.py" />[m
[32m+[m[32m      <option name="PARAMETERS" value="" />[m
[32m+[m[32m      <option name="SHOW_COMMAND_LINE" value="false" />[m
[32m+[m[32m      <option name="EMULATE_TERMINAL" value="false" />[m
[32m+[m[32m      <option name="MODULE_MODE" value="false" />[m
[32m+[m[32m      <option name="REDIRECT_INPUT" value="false" />[m
[32m+[m[32m      <option name="INPUT_FILE" value="" />[m
[32m+[m[32m      <method v="2" />[m
[32m+[m[32m    </configuration>[m
[32m+[m[32m    <configuration name="test" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">[m
[32m+[m[32m      <module name="Controlled-Urban-Rail-OD-Prediction" />[m
[32m+[m[32m      <option name="ENV_FILES" value="" />[m
[32m+[m[32m      <option name="INTERPRETER_OPTIONS" value="" />[m
[32m+[m[32m      <option name="PARENT_ENVS" value="true" />[m
[32m+[m[32m      <envs>[m
[32m+[m[32m        <env name="PYTHONUNBUFFERED" value="1" />[m
[32m+[m[32m      </envs>[m
[32m+[m[32m      <option name="SDK_HOME" value="" />[m
[32m+[m[32m      <option name="SDK_NAME" value="pytorch" />[m
[32m+[m[32m      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />[m
[32m+[m[32m      <option name="IS_MODULE_SDK" value="false" />[m
[32m+[m[32m      <option name="ADD_CONTENT_ROOTS" value="true" />[m
[32m+[m[32m      <option name="ADD_SOURCE_ROOTS" value="true" />[m
[32m+[m[32m      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
[32m+[m[32m      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/test.py" />[m
[32m+[m[32m      <option name="PARAMETERS" value="" />[m
[32m+[m[32m      <option name="SHOW_COMMAND_LINE" value="false" />[m
[32m+[m[32m      <option name="EMULATE_TERMINAL" value="false" />[m
[32m+[m[32m      <option name="MODULE_MODE" value="false" />[m
[32m+[m[32m      <option name="REDIRECT_INPUT" value="false" />[m
[32m+[m[32m      <option name="INPUT_FILE" value="" />[m
[32m+[m[32m      <method v="2" />[m
[32m+[m[32m    </configuration>[m
[32m+[m[32m    <recent_temporary>[m
[32m+[m[32m      <list>[m
[32m+[m[32m        <item itemvalue="Python.py_g_t" />[m
[32m+[m[32m        <item itemvalue="Python.test" />[m
[32m+[m[32m      </list>[m
[32m+[m[32m    </recent_temporary>[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="SharedIndexes">[m
[32m+[m[32m    <attachedChunks>[m
[32m+[m[32m      <set>[m
[32m+[m[32m        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-PY-242.21829.153" />[m
[32m+[m[32m        <option value="bundled-python-sdk-464836ebc622-b74155a9e76b-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.21829.153" />[m
[32m+[m[32m      </set>[m
[32m+[m[32m    </attachedChunks>[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />[m
[32m+[m[32m  <component name="TaskManager">[m
[32m+[m[32m    <task active="true" id="Default" summary="Default task">[m
[32m+[m[32m      <changelist id="79cb4298-14cd-41a5-811b-ec6f0e223285" name="Changes" comment="" />[m
[32m+[m[32m      <created>1733212545833</created>[m
[32m+[m[32m      <option name="number" value="Default" />[m
[32m+[m[32m      <option name="presentableId" value="Default" />[m
[32m+[m[32m      <updated>1733212545833</updated>[m
[32m+[m[32m      <workItem from="1733212547240" duration="5393000" />[m
[32m+[m[32m      <workItem from="1738748261129" duration="7589000" />[m
[32m+[m[32m      <workItem from="1738810034412" duration="3259000" />[m
[32m+[m[32m      <workItem from="1738920786097" duration="11533000" />[m
[32m+[m[32m      <workItem from="1738999391911" duration="11792000" />[m
[32m+[m[32m      <workItem from="1739075996632" duration="10440000" />[m
[32m+[m[32m      <workItem from="1739104884173" duration="484000" />[m
[32m+[m[32m      <workItem from="1739107852214" duration="2695000" />[m
[32m+[m[32m      <workItem from="1739158718368" duration="2737000" />[m
[32m+[m[32m      <workItem from="1739188354683" duration="4048000" />[m
[32m+[m[32m      <workItem from="1739241430782" duration="4836000" />[m
[32m+[m[32m      <workItem from="1739364659501" duration="1376000" />[m
[32m+[m[32m      <workItem from="1739367455833" duration="242000" />[m
[32m+[m[32m      <workItem from="1739372236569" duration="262000" />[m
[32m+[m[32m      <workItem from="1739418532196" duration="3893000" />[m
[32m+[m[32m      <workItem from="1739497426682" duration="19869000" />[m
[32m+[m[32m      <workItem from="1739591197511" duration="1334000" />[m
[32m+[m[32m      <workItem from="1739705041579" duration="971000" />[m
[32m+[m[32m      <workItem from="1740959748677" duration="10000" />[m
[32m+[m[32m      <workItem from="1743863583636" duration="4371000" />[m
[32m+[m[32m      <workItem from="1744354516069" duration="1010000" />[m
[32m+[m[32m    </task>[m
[32m+[m[32m    <servers />[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="TypeScriptGeneratedFilesManager">[m
[32m+[m[32m    <option name="version" value="3" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="com.intellij.coverage.CoverageDataManagerImpl">[m
[32m+[m[32m    <SUITE FILE_PATH="coverage/Controlled_Urban_Rail_OD_Prediction$py_g_t.coverage" NAME="py_g_t Coverage Results" MODIFIED="1739516839634" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />[m
[32m+[m[32m    <SUITE FILE_PATH="coverage/Controlled_Urban_Rail_OD_Prediction$test.coverage" NAME="test Coverage Results" MODIFIED="1739264187549" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/DCRNN_0210.py b/DCRNN_0210.py[m
[1mnew file mode 100644[m
[1mindex 0000000..6b0cdf1[m
[1m--- /dev/null[m
[1m+++ b/DCRNN_0210.py[m
[36m@@ -0,0 +1,179 @@[m
[32m+[m[32mfrom torch_geometric_temporal import StaticGraphTemporalSignal[m
[32m+[m[32mimport pickle[m
[32m+[m[32mimport os[m
[32m+[m[32mimport torch[m
[32m+[m[32mimport torch.nn.functional as F[m
[32m+[m[32mfrom torch_geometric_temporal.nn.recurrent import DCRNN[m
[32m+[m[32mfrom torch_geometric_temporal.nn.recurrent import GConvGRU[m
[32m+[m
[32m+[m
[32m+[m[32mfrom tqdm import tqdm[m
[32m+[m
[32m+[m[32mclass RecurrentGCN(torch.nn.Module):[m
[32m+[m[32m    def __init__(self, node_features, hidden_units, output_dim, K):[m
[32m+[m[32m        super(RecurrentGCN, self).__init__()[m
[32m+[m[32m        # self.recurrent = DCRNN(node_features, hidden_units, K)[m
[32m+[m[32m        self.recurrent = GConvGRU(node_features, hidden_units, K)[m
[32m+[m[32m        self.linear = torch.nn.Linear(hidden_units, output_dim)[m
[32m+[m
[32m+[m[32m    def forward(self, x, edge_index, edge_weight):[m
[32m+[m[32m        h = self.recurrent(x, edge_index, edge_weight)[m
[32m+[m[32m        h = F.selu(h)[m
[32m+[m[32m        h = self.linear(h)[m
[32m+[m[32m        return h[m
[32m+[m
[32m+[m[32mdef run_PYGT(base_dir, RGCN_node_features, RGCN_hidden_units, RGCN_output_dim, RGCN_K, lr, epoch_num, train_ratio):[m
[32m+[m[32m    train_dir_path = os.path.join(base_dir, f'train_signal_dict_OD.pkl')[m
[32m+[m[32m    with open(train_dir_path, 'rb') as f:[m
[32m+[m[32m        signal_dict = pickle.load(f, errors='ignore')[m
[32m+[m
[32m+[m[32m    train_dataset = StaticGraphTemporalSignal([m
[32m+[m[32m        features=signal_dict["features"],[m
[32m+[m[32m        targets=signal_dict["targets"],[m
[32m+[m[32m        additional_feature1=signal_dict["additional_feature"],[m
[32m+[m[32m        edge_index=signal_dict["edge_index"],[m
[32m+[m[32m        edge_weight=signal_dict["edge_weight"][m
[32m+[m[32m    )[m
[32m+[m
[32m+[m[32m    #from torch_geometric_temporal.signal import temporal_signal_split[m
[32m+[m[32m    ##train_dataset, test_dataset = temporal_signal_split(signal, train_ratio=train_ratio)[m
[32m+[m
[32m+[m[32m    test_dir_path = os.path.join(base_dir, f'test_signal_dict_OD.pkl')[m
[32m+[m[32m    with open(test_dir_path, 'rb') as f:[m
[32m+[m[32m        signal_dict = pickle.load(f, errors='ignore')[m
[32m+[m
[32m+[m[32m    test_dataset = StaticGraphTemporalSignal([m
[32m+[m[32m        features=signal_dict["features"],[m
[32m+[m[32m        targets=signal_dict["targets"],[m
[32m+[m[32m        additional_feature1=signal_dict["additional_feature"],[m
[32m+[m[32m        edge_index=signal_dict["edge_index"],[m
[32m+[m[32m        edge_weight=signal_dict["edge_weight"][m
[32m+[m[32m    )[m
[32m+[m
[32m+[m[32m    with open(os.path.join(base_dir, 'test_dataset_OD.pkl'), 'wb') as f:[m
[32m+[m[32m        pickle.dump(test_dataset, f)[m
[32m+[m
[32m+[m[32m    RecurrentGCN_model = RecurrentGCN(node_features=RGCN_node_features, hidden_units=RGCN_hidden_units,[m
[32m+[m[32m                                      output_dim=RGCN_output_dim, K=RGCN_K)[m
[32m+[m
[32m+[m[32m    optimizer = torch.optim.Adam(RecurrentGCN_model.parameters(), lr=lr)[m
[32m+[m
[32m+[m[32m    RecurrentGCN_model.train()[m
[32m+[m[32m    for epoch in tqdm(range(epoch_num)):[m
[32m+[m[32m        cost_PINN = 0[m
[32m+[m[32m        total_mape = 0[m
[32m+[m[32m        for snap_time, snapshot in enumerate(train_dataset):[m
[32m+[m[32m            y_hat = RecurrentGCN_model(snapshot.x, snapshot.edge_index, snapshot.edge_attr)[m
[32m+[m[32m            cost_PINN = cost_PINN + torch.mean((y_hat - snapshot.y) ** 2)[m
[32m+[m[32m            non_zero_mask = snapshot.y != 0[m
[32m+[m[32m            mape = torch.mean([m
[32m+[m[32m                torch.abs((snapshot.y[non_zero_mask] - y_hat[non_zero_mask]) / snapshot.y[non_zero_mask])) * 100[m
[32m+[m[32m            total_mape += mape[m
[32m+[m
[32m+[m[32m        cost_PINN = cost_PINN / (snap_time + 1)[m
[32m+[m[32m        cost_PINN.backward()[m
[32m+[m[32m        optimizer.step()[m
[32m+[m[32m        optimizer.zero_grad()[m
[32m+[m
[32m+[m[32m        avg_mape = total_mape / (snap_time + 1)[m
[32m+[m
[32m+[m[32m        print(f"Epoch {epoch + 1}/{epoch_num}, MSE: {cost_PINN.item():.4f}, MAPE: {avg_mape.item():.4f}%")[m
[32m+[m
[32m+[m[32m    model_save_path = os.path.join(base_dir, f'RecurrentGCN_model_OD.pth')[m
[32m+[m[32m    torch.save(RecurrentGCN_model.state_dict(), model_save_path)[m
[32m+[m
[32m+[m[32m    hyperparameters = {[m
[32m+[m[32m        "RGCN_node_features": RGCN_node_features,[m
[32m+[m[32m        "RGCN_hidden_units": RGCN_hidden_units,[m
[32m+[m[32m        "RGCN_output_dim": RGCN_output_dim,[m
[32m+[m[32m        "RGCN_K": RGCN_K[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    hyperparams_save_path = os.path.join(base_dir, f'hyperparameters_OD.pkl')[m
[32m+[m[32m    with open(hyperparams_save_path, 'wb') as f:[m
[32m+[m[32m        pickle.dump(hyperparameters, f)[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_PYGT(base_dir):[m
[32m+[m[32m    test_dir_path = os.path.join(base_dir, f'test_dataset_OD.pkl')[m
[32m+[m[32m    with open(test_dir_path, 'rb') as f:[m
[32m+[m[32m        test_dataset = pickle.load(f, errors='ignore')[m
[32m+[m
[32m+[m[32m    hyperparams_path = os.path.join(base_dir, f'hyperparameters_OD.pkl')[m
[32m+[m[32m    with open(hyperparams_path, 'rb') as f:[m
[32m+[m[32m        hyperparameters = pickle.load(f)[m
[32m+[m
[32m+[m[32m    RGCN_node_features = hyperparameters['RGCN_node_features'][m
[32m+[m[32m    RGCN_hidden_units = hyperparameters['RGCN_hidden_units'][m
[32m+[m[32m    RGCN_output_dim = hyperparameters['RGCN_output_dim'][m
[32m+[m[32m    RGCN_K = hyperparameters['RGCN_K'][m
[32m+[m
[32m+[m[32m    class RecurrentGCN(torch.nn.Module):[m
[32m+[m[32m        def __init__(self, node_features, hidden_units, output_dim, K):[m
[32m+[m[32m            super(RecurrentGCN, self).__init__()[m
[32m+[m[32m            # self.recurrent = DCRNN(node_features, hidden_units, K)[m
[32m+[m[32m            self.recurrent = GConvGRU(node_features, hidden_units, K)[m
[32m+[m